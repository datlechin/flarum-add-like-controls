{"version":3,"sources":["webpack://@datlechin/flarum-add-like-controls/webpack/bootstrap","webpack://@datlechin/flarum-add-like-controls/external \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-add-like-controls/external \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@datlechin/flarum-add-like-controls/external \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@datlechin/flarum-add-like-controls/external \"flarum.core.compat['common/components/Button']\"","webpack://@datlechin/flarum-add-like-controls/./src/forum/index.js","webpack://@datlechin/flarum-add-like-controls/./src/forum/addMarkasReadControls.js","webpack://@datlechin/flarum-add-like-controls/./src/forum/addLikeControls.js","webpack://@datlechin/flarum-add-like-controls/./src/forum/addIgnoreControls.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","app","initializers","add","extend","DiscussionControls","items","discussion","context","session","user","DiscussionPage","currentRoute","current","isHidden","isRead","Button","component","icon","onclick","save","lastReadPostNumber","unread","lastPostNumber","translator","trans","post","firstPost","extensions","likes","isLiked","some","upvoted","downvoted","subscription"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/utils/DiscussionControls'];","module.exports = flarum.core.compat['forum/components/DiscussionPage'];","module.exports = flarum.core.compat['common/components/Button'];","import addIgnoreControls from './addIgnoreControls';\r\nimport addLikeControls from './addLikeControls';\r\nimport addMarkAsReadControls from './addMarkasReadControls';\r\n\r\napp.initializers.add('datlechin/flarum-add-like-controls', () => {\r\n  addMarkAsReadControls();\r\n  addLikeControls();\r\n  addIgnoreControls();\r\n});\r\n","import { extend } from 'flarum/common/extend';\r\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\r\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\nexport default function addMarkAsReadControls() {\r\n  extend(DiscussionControls, 'userControls', function (items, discussion, context) {\r\n    if (app.session.user && !(context instanceof DiscussionPage)) {\r\n      let currentRoute = app.current.get('routeName');\r\n      if (currentRoute === 'index' || currentRoute === 'following') {\r\n        if (discussion.isHidden()) return;\r\n\r\n        let isRead = discussion.isRead();\r\n\r\n        items.add('markAsRead', Button.component({\r\n          icon: isRead ? 'fas fa-check-circle' : 'far fa-check-circle',\r\n          onclick: () => {\r\n            if (isRead) {\r\n              discussion.save({ lastReadPostNumber: null, unread: true })\r\n            } else {\r\n              discussion.save({ lastReadPostNumber: discussion.lastPostNumber() });\r\n            }\r\n          },\r\n        },\r\n        app.translator.trans(\r\n          isRead\r\n            ? 'datlechin-flarum-add-like-controls.forum.mark_unread'\r\n            : 'datlechin-flarum-add-like-controls.forum.mark_read'\r\n        )));\r\n      }\r\n    }\r\n  })\r\n}\r\n","import { extend } from 'flarum/common/extend';\r\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\r\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\nexport default function addLikeControls() {\r\n  extend(DiscussionControls, 'userControls', function (items, discussion, context) {\r\n    if (app.session.user && !(context instanceof DiscussionPage)) {\r\n      let currentRoute = app.current.get('routeName');\r\n\r\n      if (currentRoute === 'index' || currentRoute === 'following') {\r\n        const post = discussion.firstPost();\r\n\r\n        if (!post || post.isHidden()) return;\r\n\r\n        if ('flarum-likes' in flarum.extensions) {\r\n          const likes = post.likes();\r\n\r\n          let isLiked = app.session.user && likes && likes.some((user) => user === app.session.user);\r\n\r\n          items.add(\r\n            'like',\r\n            Button.component(\r\n              {\r\n                icon: isLiked ? 'fas fa-thumbs-up' : 'far fa-thumbs-up',\r\n                onclick: () => {\r\n                  isLiked = !isLiked;\r\n\r\n                  post.save([upvoted, downvoted, 'vote']);\r\n                },\r\n              },\r\n              app.translator.trans(isLiked ? 'flarum-likes.forum.post.unlike_link' : 'flarum-likes.forum.post.like_link')\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { extend } from 'flarum/common/extend';\r\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\r\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\nexport default function addIgnoreControls() {\r\n  extend(DiscussionControls, 'userControls', function (items, discussion, context) {\r\n    if (app.session.user && !(context instanceof DiscussionPage)) {\r\n      let currentRoute = app.current.get('routeName');\r\n\r\n      if (currentRoute === 'index' || currentRoute === 'following') {\r\n        if (discussion.isHidden()) return;\r\n\r\n        const subscription = discussion.subscription();\r\n\r\n        items.add('ignore',\r\n          Button.component({\r\n            icon: subscription === 'ignore' ? 'fas fa-eye' : 'far fa-eye-slash',\r\n            onclick: () => {\r\n              discussion.save({\r\n                subscription: subscription === 'ignore' ? null : 'ignore',\r\n              });\r\n            },\r\n          },\r\n          app.translator.trans(\r\n            subscription === 'ignore'\r\n              ? 'flarum-subscriptions.forum.discussion_controls.unignore_button'\r\n              : 'datlechin-flarum-add-like-controls.forum.ignore'\r\n          ))\r\n        );\r\n      }\r\n    }\r\n  });\r\n}\r\n"],"sourceRoot":""}